on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: Deploy
jobs:
  should-run:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running..."
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #     - name: Test
  #       run: npm run test
  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy
  #       run: echo "Deploying..."
  bump-version:
    # needs:
    #   - test
    #   - deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Bump version
        run: |
          #!/bin/bash
          set -eux

          git config user.name github-actions
          git config user.email github-actions@github.com
          VERSION=$(npm version patch)
          TAG="v$VERSION"

          git fetch --tags

          if ! git tag | grep "${TAG}"; then
            git tag -a $TAG -m $TAG
          else
            echo "Tag ${TAG} already exists"
            exit 1
          fi
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: version-bump
          base: main
          labels:
            - release
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
      - name: Auto merge
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: gh pr merge --auto --squash ${{ steps.cpr.outputs.pull-request-number }}
